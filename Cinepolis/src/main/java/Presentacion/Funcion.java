/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import DTOs.FuncionDTO;
import Negocio.CinepolisBO;
import Presentacion.Administrador.NuevaFuncion;
import excepciones.cinepolisException;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import persistencia.ClienteDAO;
import persistencia.ConexionBD;
import utilerias.JButtonCellEditor;
import utilerias.JButtonRenderer;

/**
 *
 * @author diana
 */
public class Funcion extends javax.swing.JFrame {
    private int pagina=1;
    private int LIMITE=1;
    CinepolisBO negocio;
    
    /**
     * Creates new form Funcion
     */
    public Funcion(CinepolisBO negocio) {
        initComponents();
       this.negocio=negocio;
       
        this.setLocationRelativeTo(this);
        this.setSize(791, 570);
        this.cargarMetodosIniciales();
        
        
    }
    
    private long getIdSeleccionadoTablaFunciones() {
        int indiceFilaSeleccionada = this.tblFunciones.getSelectedRow();
        if (indiceFilaSeleccionada != -1) {
            DefaultTableModel modelo = (DefaultTableModel) this.tblFunciones.getModel();
            long indiceColumnaId = 0;
            long idSocioSeleccionado = (long) modelo.getValueAt(indiceFilaSeleccionada,
                   (int) indiceColumnaId);
            return idSocioSeleccionado;
        } else {
            return 0;
        }
    }
    
    private void cargarMetodosIniciales() {
        
        this.cargarFuncionesEnTabla();
    }
    
    
    private void llenarTablaFunciones(List<FuncionDTO> funcionLista) {
         DefaultTableModel modeloTabla = (DefaultTableModel) this.tblFunciones.getModel();

    // Clear existing rows
    modeloTabla.setRowCount(0);
    
    if (funcionLista != null) {
        funcionLista.forEach(row -> {
            
            Object[] fila = new Object[6];
            fila[0] = row.getId();
            fila[1] = row.getFecha().getDate();
            fila[2] = row.getHoraInicio();
            fila[3] = row.calcularHoraFin();
            fila[4] = row.getPeliculaDTO().getDuracion();
            fila[5] = row.getPeliculaDTO().getGenero();
            modeloTabla.addRow(fila); 
        });
    }
    }
    
    private void cargarFuncionesEnTabla() {
    try {
        int indiceInicio = (pagina - 1) * LIMITE;
        List<FuncionDTO> todasLasFunciones = negocio.buscarFuncionesTabla();
        int indiceFin = Math.min(indiceInicio + LIMITE, todasLasFunciones.size());

        List<FuncionDTO> funcionesPagina = obtenerFuncionesPagina(indiceInicio, indiceFin);

        llenarTablaFunciones(funcionesPagina);

        actualizarNumeroDePagina();
    } catch (cinepolisException ex) {
        ex.printStackTrace();
    }
    }
    
    private List<FuncionDTO> obtenerFuncionesPagina(int indiceInicio, int indiceFin) {
            try {
        List<FuncionDTO> todasLasFunciones = negocio.buscarFuncionesTabla();
        List<FuncionDTO> funcionesPaginas = new ArrayList<>();

        indiceFin = Math.min(indiceFin, todasLasFunciones.size());

        for (int i = indiceInicio; i < indiceFin; i++) {
            funcionesPaginas.add(todasLasFunciones.get(i));
        }
        
        return funcionesPaginas;
            } catch (cinepolisException ex) {
 
                ex.printStackTrace();
                return Collections.emptyList();
            }
    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFunciones = new javax.swing.JTable();
        NumeroDePagina = new javax.swing.JTextField();
        btnAtras = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(12, 33, 63));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 760, 40));

        jPanel2.setBackground(new java.awt.Color(12, 33, 63));

        btnRegresar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("‚Üê");
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnRegresar)
                .addGap(0, 527, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, -1));

        jLabel1.setFont(new java.awt.Font("Serif", 0, 36)); // NOI18N
        jLabel1.setText("Funciones");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, -1, -1));

        tblFunciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Funcion", "Dia", "Hora Inicio", "Hora Fin", "Duracion", "Genero"
            }
        ));
        jScrollPane1.setViewportView(tblFunciones);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 490, 250));

        NumeroDePagina.setBackground(new java.awt.Color(200, 200, 200));
        NumeroDePagina.setText("1");
        NumeroDePagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroDePaginaActionPerformed(evt);
            }
        });
        jPanel1.add(NumeroDePagina, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 20, 20));

        btnAtras.setBackground(new java.awt.Color(12, 33, 63));
        btnAtras.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        jPanel1.add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, -1, -1));

        btnSiguiente.setBackground(new java.awt.Color(12, 33, 63));
        btnSiguiente.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        jPanel1.add(btnSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 500, -1, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
<<<<<<< HEAD
        Cartelera cartelera = new Cartelera(negocio);
        cartelera.setVisible(true);
        this.dispose();
=======
//        cartelera cartelera = new cartelera(negocio);
//        cartelera.setVisible(true);
//        this.dispose();
>>>>>>> 9790ae3067bee4fa712a81a1e5bb0929c725008a
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void NumeroDePaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroDePaginaActionPerformed
        // TODO add your handling code here:
        try {
            List<FuncionDTO> todasLasFunciones = negocio.buscarFuncionesTabla();

            int totalPaginas = (int) Math.ceil((double) todasLasFunciones.size() / LIMITE);

            int nuevaPagina = Integer.parseInt(NumeroDePagina.getText());

            if (nuevaPagina >= 1 && nuevaPagina <= totalPaginas) {
                pagina = nuevaPagina;

                cargarFuncionesEnTabla();

                actualizarNumeroDePagina();
            } else {
                JOptionPane.showMessageDialog(this, "N√∫mero de p√°gina inv√°lido", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Ingrese un n√∫mero v√°lido para la p√°gina", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (cinepolisException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_NumeroDePaginaActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        if (pagina > 1) {
            pagina--;
            cargarFuncionesEnTabla();
            actualizarNumeroDePagina();
        }

    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        try {
            List<FuncionDTO> todasLasFunciones = negocio.buscarFuncionesTabla();

            int totalPaginas = (int) Math.ceil((double) todasLasFunciones.size() / LIMITE);

            if (pagina < totalPaginas) {
                pagina++;
                cargarFuncionesEnTabla();
                actualizarNumeroDePagina();
            } else {

                JOptionPane.showMessageDialog(this, "No hay m√°s p√°ginas disponibles", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (cinepolisException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void actualizarNumeroDePagina() {
    NumeroDePagina.setText(""+pagina);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ConexionBD conexion = new ConexionBD();
        ClienteDAO clienteDAO= new ClienteDAO (conexion);
        CinepolisBO cinepolisBO=new CinepolisBO(clienteDAO);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Funcion(cinepolisBO).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumeroDePagina;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFunciones;
    // End of variables declaration//GEN-END:variables
}
